// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Tokens {
  id                    Int     @id @default(autoincrement())
  address               String? @unique
  pairAddress           String?
  priceUSD              String?
  quoteToken            String?
  createdAt             Int?
  name                  String?
  symbol                String?
  change24              String?
  liquidity             String?
  volume24              String?
  token                 Json?
  cronCount             Int?
  networkId             Int?
  image                 String?
  liquidityTokenSymbol  String?
  liquidityTokenAddress String?
  txnCount24            Int?
  twitterUrl            String?
}

model Blacklist {
  id           Int    @id @default(autoincrement())
  tokenAddress String @unique
}

model Votes {
  id            Int      @id @default(autoincrement())
  date          DateTime @default(now())
  tokenAddress  String
  walletAddress String
}

model Score {
  tokenAddress String  @id @unique
  tokenScore   Float
  liquidity    String?
}

model ScoreByHours {
  tokenAddress  String @id @unique
  tokenScore0h  Float?
  tokenScore1h  Float?
  tokenScore2h  Float?
  tokenScore3h  Float?
  tokenScore4h  Float?
  tokenScore5h  Float?
  tokenScore6h  Float?
  tokenScore7h  Float?
  tokenScore8h  Float?
  tokenScore9h  Float?
  tokenScore10h Float?
  tokenScore11h Float?
  tokenScore12h Float?
  tokenScore13h Float?
  tokenScore14h Float?
  tokenScore15h Float?
  tokenScore16h Float?
  tokenScore17h Float?
  tokenScore18h Float?
  tokenScore19h Float?
  tokenScore20h Float?
  tokenScore21h Float?
  tokenScore22h Float?
  tokenScore23h Float?
}

model DailyScore {
  tokenAddress      String @id @unique
  averageScoreToday Float?
  averageScore24Ago Float?
  averageScore48Ago Float?
  updatedAt         DateTime @default(now())
}

model Users {
  walletAddress         String   @id @unique
  telegramId            String?
  votes                 Int      @default(5)
  updatedAt             DateTime @default(now())
  refreshToken          String?
  refreshTokenCreatedAt DateTime? @default(now())
  freeTrialWasTaken     Boolean  @default(false)
  id                    Int      @unique @default(autoincrement())
  ownRefId              String?  @unique
  registrationRefId     String?
  holdingTWAmount       String?
  holdingTWAmountUSDT   String?
  subscriptionLevel     String?
  trialCreatedAt        DateTime?
  planWasTakenAt        DateTime?
}

model Volume {
  id              Int      @id @default(autoincrement())
  address         String
  volumeCreatedAt DateTime @default(now())
  volume24        String?
  change24        String?  @default("0")
}

model PostedTokens {
  tokenAddress String   @id @unique
  createdAt    DateTime @default(now())
}

model Holders {
  id              Int @id @default(autoincrement())
  tokenAddress    String?
  holdersCount    Int? @default(0)
  createdAt       DateTime @default(now())
}

model Subscriptions {
  id                  Int @id @default(autoincrement())
  title               String
  subTitle            String?
  description         String?
  period              String
  holdingTWAmount     Int
}

model TtmsByHours {
  id          Int @id @default(autoincrement())
  score3am       Json?
  score9am       Json?
  score3pm       Json?
  score9pm       Json?
  createdAt      DateTime @default(now())
}

model TgWhiteList {
  telegramId    String @id @unique
}

model TtmsPortfolio {
  id                    Int @id @default(autoincrement())
  tokenAddress          String
  symbol                String
  priceUSD              String
  startedAt             String
  ATH                   String?
  ATL                   String?
  dailyPriceChange095   String?
  currentPrice          String?
  exitPrice             String?
  quoteToken            String?
  pairAddress           String?
  networkId             Int?
  image                 String?
  liquidityTokenSymbol  String?
  liquidityTokenAddress String?
  stopLoss              String? 
  interval              Int?
  intervalCheck         Int?
}

model Last24SolvedTtmsPortfolio {
  id               Int @id @default(autoincrement())
  portfolio        Json
  startedAt        String
  createdAt        DateTime @default(now())
  interval         Int?
}

model AverageTtmsPortfolioResults {
  id                  Int @id @default(autoincrement())
  average24Result     String?
  average48Result     String?
  startedAt           String
  createdAt           DateTime @default(now())
}

model Airdrops {
  id                    Int @id @default(autoincrement())
  airdropName           String @unique
  usersLimit            Int
  currentProgress       Int @default(0)
  status                String @default("ongoing")
  participants          AirdropsParticipants[]
}

model AirdropsParticipants {
  id                  Int @id @default(autoincrement())
  walletAddress       String
  telegramId          String?
  airdropName         String
  createdAt           DateTime @default(now())
  planActivatedAt     DateTime?
  airdropAchievedAt   DateTime?
  airdrop             Airdrops @relation(fields: [airdropName], references: [airdropName])
  @@unique([walletAddress, airdropName])
}

model TokenWatch {
  id                    Int     @id @default(autoincrement())
  address               String? @unique
  priceUSD              String?
  name                  String?
  symbol                String?
  token                 Json?
}

model SignalBotUsers {
  id          Int       @id @default(autoincrement())
  telegramId  String    @unique
  userName    String?
  createdAt   DateTime  @default(now())
  status      Status    @default(active)
}

enum Status {
  active
  inactive
}
